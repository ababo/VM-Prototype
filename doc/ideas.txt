1. Basics

- There are two main entities: modules and threads;
- Module represents immutable code and mutable data;
- Both code and data of module are persistent;
- Module has copy UUID (ID) and type UUID (TID);
- Module can be moved or copied inside it's host or into another host;
- ID and TID of moved module don't change;
- ID of module copy is different from original ID;
- TID of module copy is same as original TID;
- Module has number of external procedures;
- External procedure can be called by specifying module ID;
- External procedure can be locally called by specifying module TID;

2. Synchronization

- There are only synchronous calls;
- External procedure can be a function, reader or writer. Functions don't have
  access to module mutable data; readers have read access; writers have write
  access;
- Function calls are never blocked;
- Reader and writer calls of module are blocked if there is a writer call in
  progress (only a single writer can be called at same time);
- Writer calls of module are blocked if there are another reader calls in
  progress (several readers can be called at same time, but no writer);
- Writers have higher unblock priority over readers;

3. Module packing

- Module can get packed, i.e., to become inaccessible;
- Threads executing inside a module are stopped when it becomes packed;
- Module can get unpacked;
- When module becomes unpacked stopped threads resume their execution;
- Only packed module can be moved or copied (copy does not contain stopped
  threads of the original).
